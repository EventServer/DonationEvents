plugins {
    id 'com.github.johnrengelman.shadow' version '5.1.0'
    id 'java'
}
apply plugin: 'com.github.johnrengelman.shadow'
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

group = 'tw'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.19.2-R0.1-SNAPSHOT"
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
    implementation  group: 'io.socket', name: 'socket.io-client', version: '1.0.1'
    shadow  group: 'io.socket', name: 'socket.io-client', version: '1.0.1'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

shadowJar {
    configurations = [project.configurations.shadow]
    archiveClassifier.set('')
    archiveBaseName.set('DonationEvents')

}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
build.dependsOn(shadowJar);